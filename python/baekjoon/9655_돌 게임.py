'''
게임은 상근이가 무조건 이기는 경우, 무조건 지는 경우로 나뉨
DP를 적용하면 쉽게 구할 수 있음
예를 들어 1개만 있을 때는 상근이가 먼저 시작하므로 상근이가 무조건 이김
2개가 있으면 무조건 창영이 이김
3개일 때는 돌을 3개를 가져갈 수 있으므로 상근이가 이김
4개일 때는 상근이가 1개를 가져가든 3개를 가져가든 마지막은 항상 창영이이므로
무조건 창영이가 이김

상근, 창영이가 서로 한 번씩 가져가는 경우의 수는 
[1, 1], [1, 3], [3, 1], [3, 3]이므로 현재 돌 수에서 이들을 빼고 남은 돌 수의 게임 결과가
모두 같으면 그 사람이 이김
그런데 홀수면 상근이가 이기고 짝수면 창영이가 이김
위 경우의 수에서 뺄 수 있는 게 모두 짝수인데 
짝수에서 짝수를 빼면 항상 짝수고 홀수에서 짝수를 빼면 항상 홀수이기 때문
'''

N = int(input())

if N % 2:
    print('SK')
else:
    print('CY')